using UnityEngine;  public class SpawnerMulti : MonoBehaviour { 	public GameObject[] epoch0; 	public GameObject[] epoch1;// The enemy prefab to be spawned. 	public GameObject[] epoch2; 	public GameObject[] epoch3; 	public GameObject[] epoch4; 	public GameObject[] epochStart; 	public GameObject [] challengePrefeb; 	public Transform[] spawnPoints;    // An array of the spawn points this enemy can spawn from. 	public float spawnTime = 2f;  // time after which object spawns. frå 2 till 0,8. 	public int ChallengeTimer = 0;  	void Start () 	{  		spawnTime = PlayerPrefs.GetFloat ("SpawnRate"); 		// Call the Spawn function after a delay of the spawnTime and then continue to call after the same amount of time. 		Invoke ("Spawn", spawnTime); 		InvokeRepeating ("IncreaseSpawnRate", 0f, 1f); 	}   	void Spawn () 	{  		ChallengeTimer += 1; 		if (ChallengeTimer == 20) 		{ 			int spawnPointIndex = Random.Range (0, spawnPoints.Length); 			int prefeb_num = Random.Range (0, epoch1.Length);  			// Create an instance of the enemy prefab at the randomly selected spawn point's position and rotation. 			Instantiate (epoch1[prefeb_num], spawnPoints[spawnPointIndex].position, spawnPoints[spawnPointIndex].rotation); 			Invoke ("SpawnChallenge",spawnTime);  		}  		GameObject thePlayer = GameObject.Find ("Player"); 		PlayerMovement playerScript = thePlayer.GetComponent<PlayerMovement> ();  		if (ChallengeTimer < 20){ 			 			if (playerScript.summa == 0) { // epoch start 				   				int spawnPointIndex = Random.Range (0, spawnPoints.Length); 				int prefeb_num = Random.Range (0, epochStart.Length); 				Instantiate (epochStart [prefeb_num], spawnPoints [spawnPointIndex].position, spawnPoints [spawnPointIndex].rotation); 				ScheduleNextSpawn (); 			}  			else { 				if (playerScript.summa < 1000 && playerScript.summa > 1) { //EPOCH 0 					int spawnPointIndex = Random.Range (0, spawnPoints.Length); 					int prefeb_num = Random.Range (0, epoch0.Length); 					Instantiate (epoch0 [prefeb_num], spawnPoints [spawnPointIndex].position, spawnPoints [spawnPointIndex].rotation); 					ScheduleNextSpawn (); 					}  			else { 				if (playerScript.summa > 1000000000) { //epoch4 				int spawnPointIndex = Random.Range (0, spawnPoints.Length); 				int prefeb_num = Random.Range (0, epoch4.Length); 				Instantiate (epoch4 [prefeb_num], spawnPoints [spawnPointIndex].position, spawnPoints [spawnPointIndex].rotation); 				ScheduleNextSpawn (); 				} 						else { 							if (playerScript.summa > 100000) { //epoch3 							int spawnPointIndex = Random.Range (0, spawnPoints.Length); 							int prefeb_num = Random.Range (0, epoch3.Length); 							Instantiate (epoch3 [prefeb_num], spawnPoints [spawnPointIndex].position, spawnPoints [spawnPointIndex].rotation); 							ScheduleNextSpawn (); 							} 							else { // epoch 2 								if (playerScript.summa > 10000) { 								int spawnPointIndex = Random.Range (0, spawnPoints.Length); 								int prefeb_num = Random.Range (0, epoch2.Length); 								Instantiate (epoch2 [prefeb_num], spawnPoints [spawnPointIndex].position, spawnPoints [spawnPointIndex].rotation); 								ScheduleNextSpawn (); 								} 								else { // epoch 1 								int spawnPointIndex = Random.Range (0, spawnPoints.Length); 								int prefeb_num = Random.Range (0, epoch1.Length); 								Instantiate (epoch1 [prefeb_num], spawnPoints [spawnPointIndex].position, spawnPoints [spawnPointIndex].rotation); 								ScheduleNextSpawn (); 					} 				} 				} 			} 		} 	} 	} 	void ScheduleNextSpawn () 	{  		float spawnInSeconds; 		spawnInSeconds = spawnTime; 		Invoke ("Spawn", spawnInSeconds);  	} 		void IncreaseSpawnRate() 		{ 			if (spawnTime > 0.8f) 				spawnTime -= 0.007f;  			if (spawnTime == 0.8f) 				CancelInvoke ("IncreaseSpawnRate"); 	} 	void SpawnChallenge () 	{ 		int spawnPointIndex = Random.Range (0, spawnPoints.Length); 		int prefeb_num = Random.Range (0, challengePrefeb.Length); 		Instantiate (challengePrefeb[prefeb_num], spawnPoints[spawnPointIndex].position, spawnPoints[spawnPointIndex].rotation); 		ChallengeTimer = 0; 		ScheduleNextSpawn (); 	} }